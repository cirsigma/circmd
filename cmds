local CmdBar = script.Parent:WaitForChild("CmdBar") -- Assumes CmdBar is a TextBox UI element in the GUI
local Prefix = "CMD_CIR" -- Prefix for chat commands
local Commands = {
    speed = {args = {"[speed]"}, callback = function(args)
        -- Handle speed logic
        local speed = tonumber(args[1])
        if speed then
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = speed
        end
    end},
    loopspeed = {args = {"[speed]"}, callback = function(args)
        -- Handle loopspeed logic
        local speed = tonumber(args[1])
        if speed then
            -- Loop speed logic here
        end
    end},
    jumppower = {args = {"[power]"}, callback = function(args)
        -- Handle jumppower logic
        local power = tonumber(args[1])
        if power then
            game.Players.LocalPlayer.Character.Humanoid.JumpPower = power
        end
    end},
    loopjumpower = {args = {"[power]"}, callback = function(args)
        -- Handle loopjumpower logic
        local power = tonumber(args[1])
        if power then
            -- Loop jump power logic here
        end
    end},
}

-- Function to update the command bar based on input
local function updateCmdBar(query)
    CmdBar.Text = query
    local matchingCommands = {}

    for cmd, data in pairs(Commands) do
        if cmd:sub(1, #query):lower() == query:lower() then
            table.insert(matchingCommands, cmd .. " " .. table.concat(data.args, " "))
        end
    end

    if #matchingCommands == 0 then
        CmdBar.Text = "No matching commands."
    else
        CmdBar.Text = table.concat(matchingCommands, "\n")
    end
end

-- Command Bar input listener
CmdBar:GetPropertyChangedSignal("Text"):Connect(function()
    updateCmdBar(CmdBar.Text)
end)

-- Function to handle command execution
local function executeCommand(commandText)
    local cmd, argsString = commandText:match("^(%S+)%s*(.*)")
    local args = {}

    if argsString and #argsString > 0 then
        for arg in argsString:gmatch("%S+") do
            table.insert(args, arg)
        end
    end

    -- Find the command and execute the callback
    local command = Commands[cmd:lower()]
    if command then
        command.callback(args)
    end
end

-- Listen for Enter key in the CmdBar (command bar)
CmdBar.FocusLost:Connect(function(enterPressed)
    if enterPressed and CmdBar.Text and #CmdBar.Text > 0 then
        executeCommand(CmdBar.Text)
        CmdBar.Text = "" -- Clear the command bar after execution
    end
end)

-- Chat command handling with prefix
game.Players.LocalPlayer.Chatted:Connect(function(message)
    if message:sub(1, #Prefix) == Prefix then
        local cmdText = message:sub(#Prefix + 2)
        executeCommand(cmdText)
    end
end)
